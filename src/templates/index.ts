import { template } from 'lodash'

export const tslint = template(`
{
    "defaultSeverity": "error",
    "extends": [
        "tslint:recommended"
    ],
    "jsRules": {},
    "rules": {
        "semicolon": [true, "never"],
        "quotemark": [true, "single"],
        "no-console": false
    },
    "rulesDirectory": []
}
`)

export const tsconfig = template(`
{
  "compilerOptions": {
    "target": "es5",
    "module": "esnext",
    "outDir": "./dist",
    "baseUrl": "./src",
    "strict": true,
    "esModuleInterop": true,
    "moduleResolution": "node",
    "plugins": [
      {
        "name": "typescript-tslint-plugin",
        "configFile": "./tslint.json"
      }
    ],
    "declaration": true
  }
}
`)

export const lintStaged = template(`
{
  "*.ts": [
    "prettier --write",
    "tslint --fix",
    "git add"
  ]
}
`)

export const husky = template(`
{
  "hooks": {
    "pre-commit": "lint-staged"
  }
}
`)

export const gitignore = template(`
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release
dist

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next
`)

export const prettier = template(`
{
  "parser": "typescript",
  "printWidth": 80,
  "tabWidth": 2,
  "useTabs": false,
  "semi": false,
  "singleQuote": true,
  "trailingComma": "all",
  "bracketSpacing": true,
  "jsxBracketSameLine": false,
  "arrowParens": "avoid"
}
`)
